/*
 * Copyright (c) 2015 IBM Corporation and others.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * You may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

def homePath = System.properties['user.home']
def nbextensionsPath = homePath + '/.ipython/nbextensions'

// If your IDE does not pick up the path correctly and find nosetests, you can set it in your gradle
// configuration file, like this: systemProp.nosetestsCommand=/.../nosetests
def nosetestsCommand = System.properties['nosetestsCommand'] ?: "nosetests"

//Note:  Generated Javascript is combined with python-specific javascript and all are included in git
//which allows the pip installer to operate directly from git.
task copyWebFiles(type: Copy) {
    description 'Copy Required Web Support Files To Brunel Python'
    from project(':service').webFiles
    exclude '*Test*'
    into 'brunel/brunel_ext'
}

//Convenience for development.  Copies requires JS/CSS to /nbextensions without a pip install
task copyWebFilesToNbextensions(type: Copy, dependsOn: copyWebFiles) {
    description 'Copy Required Web Support Files Directly To IPython (presumes ipython in $HOME/.ipython).  Convenience for developing.'
    from 'brunel/brunel_ext'
    exclude '*Test*'
    into nbextensionsPath + '/brunel_ext'
}

task copyJarFiles(type: Copy, dependsOn: [project(':core').build, project(':data').build]) {
    description 'Copies required .jar files needed for execution'
    from (project(':core').configurations.compile.files { it.name == "gson" }) 
    from project(':core').jar.archivePath
    from project(':data').jar.archivePath
    into 'brunel/lib'
}

// Makes a local output with all that is needed for the notebook to run
task makeNotebooks(type: Copy, dependsOn: copyWebFilesToNbextensions) {
    description 'Builds a local notebook directory'
    from('examples')
    exclude '*Test*', '**/.ipynb_checkpoints'
    into 'out/notebookRoot/examples'
}

//Note, for this to work properly:
//   - BRUNEL_SERVICE env var must be set to the location of the local deployment using the context root supplied in the Gradle script
//		  typically:  http://localhost:8080/brunel-service
//   - TOMCAT_HOME env var must be set to the local install location of TomEE.

task test(type: Exec, dependsOn: [project(':service').build, ':service:cargoStartLocal']) {
    commandLine nosetestsCommand
}

test.finalizedBy ':service:cargoStopLocal'

// Commenting out dependency on test as it breaks the build when it fails, even if everything is OK.
// Possibly make it optional or only run if nosetests exists?
//
//task build(dependsOn: [copyWebFiles, test]) {
//}

task build(dependsOn: [copyWebFiles, copyJarFiles]) {
}

defaultTasks 'build', 'makeNotebooks'




